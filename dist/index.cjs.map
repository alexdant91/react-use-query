{"version":3,"file":"index.cjs","sources":["../src/index.jsx"],"sourcesContent":["import { useState, useEffect, useRef, createContext, useContext, useCallback } from 'react';\n\n/**\n * @callback QueryResultCacheFn\n * @param {string} url\n * \n * @typedef {object} QueryResultCache\n * @property {QueryResultCacheFn} get\n * @property {QueryResultCacheFn} has\n * @property {QueryResultCacheFn} clear\n *\n * @typedef {object} QueryResult\n * @property {*} data\n * @property {Error|false} error\n * @property {boolean} loading\n * @property {function} updateData\n * @property {function} refresh\n * @property {QueryResultCache} cache\n *\n * @typedef {object} QueryEventResult\n * @property {function} sendRequest\n * @property {boolean} isSending\n * @property {*} data\n * @property {Error|false} error\n * @property {boolean} loading\n * @property {function} updateData\n * @property {function} refresh\n * @property {QueryResultCache} cache\n * \n * @typedef {object} DefaultUseQueryOptions\n * @property {string} [name] \n * @property {string} [selector] \n * @property {array|function} [pick]\n * @property {function} [transform] \n * @property {string} [method=\"GET\"] \n * @property {object} [headers] \n * @property {*} [body] \n * @property {boolean} [isDebuggerActivated=false] \n * @property {number} [cacheTimeout=0] \n */\n\nconst DEFAULT_OPTIONS = {\n    name: undefined,\n    selector: undefined,\n    transform: undefined,\n    pick: undefined,\n    method: \"GET\",\n    headers: undefined,\n    body: undefined,\n    isDebuggerActivated: false,\n    cacheTimeout: 0,\n};\n\nlet cacheTimeout = null;\n\n/**\n * @param {string} [message=\"\"] \n * @param {boolean} [isDebuggerActivated=false]\n * @param {boolean} [isError=false] \n * @param {null|string|Error} [error=null]\n */\nconst logDebugger = (message = \"\", isDebuggerActivated = false, isError = false, error = null) => {\n    if (isError) {\n        if (isDebuggerActivated) console.error(`[USE_QUERY]: ${message} - ${new Date().toLocaleTimeString()}`, error);\n    } else {\n        if (isDebuggerActivated) console.log(`[USE_QUERY]: ${message} - ${new Date().toLocaleTimeString()}`);\n    }\n}\n\n/**\n * @param {DefaultUseQueryOptions} options \n * @returns {boolean}\n */\nconst validateOptions = (options) => {\n    const keys = Object.keys(DEFAULT_OPTIONS);\n    const _keys = Object.keys(options);\n    const symDifference = _keys.filter(item => !keys.includes(item));\n\n    if (options.selector !== undefined && typeof options.selector !== \"string\") {\n        logDebugger(\"Validation error for `options.selector`\", isDebuggerActivated, true, new Error(\"Selector must be a string. It should contains key value to select from result object.\"));\n        return false;\n    } else if (options.name !== undefined && typeof options.name !== \"string\") {\n        logDebugger(\"Validation error for `options.name`\", isDebuggerActivated, true, new Error(\"Name must be a string. It should contains data name to retrieve it from state.\"));\n        return false;\n    } else if (options.method !== undefined && (typeof options.method !== \"string\" || [\"GET\", \"POST\", \"PUT\", \"PATCH\", \"DELETE\"].indexOf(options.method.toUpperCase()) === -1)) {\n        logDebugger(\"Validation error for `options.method`\", isDebuggerActivated, true, new Error('Method must be a string. It should be one of \"GET\", \"POST\", \"PUT\", \"PATCH\", \"DELETE\".'));\n        return false;\n    } else if (options.headers !== undefined && typeof options.headers !== \"object\" && Array.isArray(options.headers)) {\n        logDebugger(\"Validation error for `options.headers`\", isDebuggerActivated, true, new Error(\"Headers must be an object. It should contains request headers key value.\"));\n        return false;\n    } else if (options.isDebuggerActivated !== undefined && typeof options.isDebuggerActivated !== \"boolean\" && Array.isArray(options.headers)) {\n        logDebugger(\"Validation error for `options.isDebuggerActivated`\", true, true, new Error(\"isDebuggerActivated must be a boolean. It should be activated if you need to debug all process.\"));\n        return false;\n    } else if (options.transform !== undefined && typeof options.transform !== \"function\") {\n        logDebugger(\"Validation error for `options.transform`\", true, true, new Error(\"transform must be a function. It rappresent the function to transform data before saving on state.\"));\n        return false;\n    } else if (options.pick !== undefined && (typeof options.pick !== \"function\" && !Array.isArray(options.pick))) {\n        logDebugger(\"Validation error for `options.pick`\", true, true, new Error(\"pick must be a function or an array. It rappresent the function or the array to pick just a portion of data.\"));\n        return false;\n    } else if (options.cacheTimeout !== undefined && typeof options.cacheTimeout !== \"number\") {\n        logDebugger(\"Validation error for `options.cacheTimeout`\", true, true, new Error(\"cacheTimeout must be a number. It rappresent the timeout to remove cached data from memory in milliseconds.\"));\n        return false;\n    }\n    \n    if (symDifference.length > 0) {\n        logDebugger(\"Validation error\", true, true, new Error(`Found not valid option${symDifference.length > 1 ? \"s\" : \"\"}: \"${symDifference.join('\", \"')}\".`));\n        return false;\n    }\n\n    return true;\n}\n\n/**\n * @param {DefaultUseQueryOptions} options \n * @param {MutableRefObject} cache \n */\nconst timeoutCacheClear = (options, cache) => {\n    if (options.cacheTimeout && options.cacheTimeout > 0) {\n        logDebugger(`Cache clear timeout start: ${options.cacheTimeout / 1000} seconds.`, options.isDebuggerActivated);\n        clearTimeout(cacheTimeout);\n        cacheTimeout = setTimeout(() => {\n            cache.current = {};\n            logDebugger(`Cache cleared`, options.isDebuggerActivated);\n        }, options.cacheTimeout);\n    }\n}\n\nconst QueryContext = createContext(null);\n\nexport const QueryProvider = ({ children }) => {\n    const [state, setState] = useState(null);\n    return (\n        <QueryContext.Provider value={[state, setState]}>\n            {children}\n        </QueryContext.Provider>\n    )\n}\n\nexport const useQueryContext = (name = undefined) => {\n    const [data, setData] = useContext(QueryContext);\n    \n    if (name) { \n        return [data ? data[name] : data, (value) => setData((prev) => ({ ...prev, [name]: value }))];\n    } else {\n        return [data, setData];\n    }\n};\n\n/**\n * Use query hook that manage requests, cache and other features.\n * @param {string} url \n * @param {object} options\n * @param {string} [options.name] Name must be a string. It should contains data state name.\n * @param {string} [options.selector] Selector must be a string. It should contains key value to select from result object.\n * @param {string} [options.pick] Pick must be a function or an array of string. It rappresent the function or the array to pick just a portion of data.\n * @param {function} [options.transform] Transform must be a function. It rappresent the funcion to transform data before saving on state. If you need to mutate data, use `mutate` function instead\n * @param {string} [options.method] Method must be a string. It should be one of \"GET\", \"POST\", \"PUT\", \"PATCH\", \"DELETE\".\n * @param {object} [options.headers] Headers must be an object. It should contains request headers key value.\n * @param {*} [options.body]\n * @param {boolean} [options.isDebuggerActivated] isDebuggerActivated must be a boolean. It should be activated if you need to debug all process.\n * @param {number} [options.cacheTimeout] cacheTimeout must be a number. It rappresent the timeout to remove cached data from memory in milliseconds.\n * @returns {QueryResult}\n */\nexport const useQuery = (url, options = { ...DEFAULT_OPTIONS }) => {\n    const { name, selector, pick, transform, method, headers, body, isDebuggerActivated } = { ...DEFAULT_OPTIONS, ...options };\n\n    validateOptions({ ...DEFAULT_OPTIONS, ...options });\n    \n    const cache = useRef({});\n\n    const [data, setData] = useQueryContext(name);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n    const fetchData = async () => {\n        logDebugger(\"Fetching data...\", isDebuggerActivated);\n\n        if (error) setError(null);\n        if (!loading) setLoading(true);\n\n        if (cache.current[url]) {\n            logDebugger(\"Get data from cache, no need a new request\", isDebuggerActivated);\n            if (typeof transform === \"function\") logDebugger(\"transform data before saving\", isDebuggerActivated);\n            if (typeof pick === \"function\" || Array.isArray(pick)) logDebugger(\"pick data before saving\", isDebuggerActivated);\n\n            setData(cache.current[url]);\n            timeoutCacheClear(options, cache);\n            setLoading(false);\n            return;\n        }\n\n        try {\n            logDebugger(\"No data found in cache, proceed to do a new request...\", isDebuggerActivated);\n\n            const response = await fetch(url, { method, headers, data: body });\n            const result = await response.json();\n\n            if (response.ok) {\n                const _result = selector ? result[selector] : result;\n                if (typeof transform === \"function\") logDebugger(\"transform data before saving\", isDebuggerActivated);\n                let _transformedData = typeof transform === \"function\" ? transform(_result) : _result;\n                if (typeof pick === \"function\" || Array.isArray(pick)) {\n                    logDebugger(\"pick data before saving\", isDebuggerActivated);\n                    _transformedData = JSON.parse(JSON.stringify(_transformedData, pick));\n                }\n                setData(_transformedData);\n                logDebugger(\"Request done\", isDebuggerActivated);\n                cache.current[url] = _transformedData;\n                timeoutCacheClear(options, cache);\n                logDebugger(`New data saved on cache for: \"${url}\"`, isDebuggerActivated);\n            } else {\n                setError(result);\n                logDebugger(\"An error occurred\", isDebuggerActivated, true, result);\n            }\n        } catch (err) {\n            setError(err);\n            logDebugger(\"An error occurred\", isDebuggerActivated, true, err);\n        } finally {\n            setLoading(false);\n            logDebugger(\"Data seatled, process done\", isDebuggerActivated);\n        }\n    };\n\n    useEffect (() => {\n        fetchData();\n    }, [url]);\n\n    return {\n        data,\n        error,\n        loading,\n        mutate: setData,\n        refresh: fetchData,\n        cache: {\n            get: (url) => {\n                return url ? cache.current[url] : cache.current;\n            },\n            has: (url) => {\n                return cache.current[url];\n            },\n            clear: () => {\n                cache.current = {};\n                logDebugger(`Cache cleared`, isDebuggerActivated);\n            }\n        }\n    };\n};\n\n/**\n * Use query hook that manage requests, cache and other features with an event like \"click\"\n * @param {string} url \n * @param {object} options\n * @param {string} [options.name] Name must be a string. It should contains data state name.\n * @param {string} [options.selector] Selector must be a string. It should contains key value to select from result object.\n * @param {string} [options.pick] Pick must be a function or an array of string. It rappresent the function or the array to pick just a portion of data.\n * @param {function} [options.transform] Transform must be a function. It rappresent the funcion to transform data before saving on state. If you need to mutate data, use `mutate` function instead\n * @param {string} [options.method] Method must be a string. It should be one of \"GET\", \"POST\", \"PUT\", \"PATCH\", \"DELETE\".\n * @param {object} [options.headers] Headers must be an object. It should contains request headers key value.\n * @param {*} [options.body]\n * @param {boolean} [options.isDebuggerActivated] isDebuggerActivated must be a boolean. It should be activated if you need to debug all process.\n * @param {number} [options.cacheTimeout] cacheTimeout must be a number. It rappresent the timeout to remove cached data from memory in milliseconds.\n * @returns {QueryEventResult}\n */\nexport const useQueryEvent = (url, options = { ...DEFAULT_OPTIONS }) => {\n    const [isSending, setIsSending] = useState(false);\n\n    const { name, selector, pick, transform, method, headers, body, isDebuggerActivated } = { ...DEFAULT_OPTIONS, ...options };\n\n    validateOptions({ ...DEFAULT_OPTIONS, ...options });\n    \n    const cache = useRef({});\n\n    const [data, setData] = useQueryContext(name);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n    const fetchData = async () => {\n        logDebugger(\"Fetching data...\", isDebuggerActivated);\n\n        if (error) setError(null);\n        if (!loading) setLoading(true);\n\n        if (cache.current[url]) {\n            logDebugger(\"Get data from cache, no need a new request\", isDebuggerActivated);\n            if (typeof transform === \"function\") logDebugger(\"transform data before saving\", isDebuggerActivated);\n            if (typeof pick === \"function\" || Array.isArray(pick)) logDebugger(\"pick data before saving\", isDebuggerActivated);\n\n            setData(cache.current[url]);\n            timeoutCacheClear(options, cache);\n            setLoading(false);\n            return;\n        }\n\n        try {\n            logDebugger(\"No data found in cache, proceed to do a new request...\", isDebuggerActivated);\n\n            const response = await fetch(url, { method, headers, data: body });\n            const result = await response.json();\n\n            if (response.ok) {\n                const _result = selector ? result[selector] : result;\n                if (typeof transform === \"function\") logDebugger(\"transform data before saving\", isDebuggerActivated);\n                let _transformedData = typeof transform === \"function\" ? transform(_result) : _result;\n                if (typeof pick === \"function\" || Array.isArray(pick)) {\n                    logDebugger(\"pick data before saving\", isDebuggerActivated);\n                    _transformedData = JSON.parse(JSON.stringify(_transformedData, pick));\n                }\n                setData(_transformedData);\n                logDebugger(\"Request done\", isDebuggerActivated);\n                cache.current[url] = _transformedData;\n                timeoutCacheClear(options, cache);\n                logDebugger(`New data saved on cache for: \"${url}\"`, isDebuggerActivated);\n            } else {\n                setError(result);\n                logDebugger(\"An error occurred\", isDebuggerActivated, true, result);\n            }\n        } catch (err) {\n            setError(err);\n            logDebugger(\"An error occurred\", isDebuggerActivated, true, err);\n        } finally {\n            setLoading(false);\n            logDebugger(\"Data seatled, process done\", isDebuggerActivated);\n        }\n    };\n  \n    const sendRequest = useCallback(async () => {\n      // don't send again while we are sending\n      if (isSending) return\n      // update state\n      setIsSending(true);\n      // send the actual request\n      await fetchData();\n      // once the request is sent, update state again\n      setIsSending(false);\n    }, [isSending, url]) // update the callback if the state changes\n  \n    return {\n        sendRequest,\n        isSending,\n        data,\n        error,\n        loading,\n        mutate: setData,\n        refresh: fetchData,\n        cache: {\n            get: (url) => {\n                return url ? cache.current[url] : cache.current;\n            },\n            has: (url) => {\n                return cache.current[url];\n            },\n            clear: () => {\n                cache.current = {};\n                logDebugger(`Cache cleared`, isDebuggerActivated);\n            }\n        }\n    }\n  }"],"names":["_catch","body","recover","result","e","then","DEFAULT_OPTIONS","name","undefined","selector","transform","pick","method","headers","isDebuggerActivated","cacheTimeout","_finallyRethrows","finalizer","bind","logDebugger","message","isError","error","console","Date","toLocaleTimeString","log","validateOptions","options","keys","Object","_keys","symDifference","filter","item","includes","Error","indexOf","toUpperCase","Array","isArray","length","join","timeoutCacheClear","cache","clearTimeout","setTimeout","current","QueryContext","createContext","QueryProvider","_ref","children","_useState","useState","state","setState","_jsx","Provider","value","useQueryContext","_useContext","useContext","data","setData","prev","_extends2","_extends","useQuery","url","_DEFAULT_OPTIONS$opti","useRef","_useQueryContext","_useState2","setError","_useState3","loading","setLoading","fetchData","Promise","resolve","_temp","fetch","response","json","ok","_result","_transformedData","JSON","parse","stringify","err","_wasThrown","_result2","reject","useEffect","mutate","refresh","get","has","clear","useQueryEvent","_useState4","isSending","setIsSending","_DEFAULT_OPTIONS$opti2","_useQueryContext2","_useState5","_useState6","_temp2","_wasThrown2","_result3","sendRequest","useCallback"],"mappings":";;;;;;;;;;;;;;;;;;AAkjBO,SAASA,MAAMA,CAACC,IAAI,EAAEC,OAAO,EAAE;EACrC,IAAI;AACH,IAAA,IAAIC,MAAM,GAAGF,IAAI,EAAE,CAAA;GACnB,CAAC,OAAMG,CAAC,EAAE;IACV,OAAOF,OAAO,CAACE,CAAC,CAAC,CAAA;AAClB,GAAA;AACA,EAAA,IAAID,MAAM,IAAIA,MAAM,CAACE,IAAI,EAAE;IAC1B,OAAOF,MAAM,CAACE,IAAI,CAAC,KAAK,CAAC,EAAEH,OAAO,CAAC,CAAA;AACpC,GAAA;AACA,EAAA,OAAOC,MAAM,CAAA;AACd,CAAA;AAnhBA,IAAMG,eAAe,GAAG;AACpBC,EAAAA,IAAI,EAAEC,SAAS;AACfC,EAAAA,QAAQ,EAAED,SAAS;AACnBE,EAAAA,SAAS,EAAEF,SAAS;AACpBG,EAAAA,IAAI,EAAEH,SAAS;AACfI,EAAAA,MAAM,EAAE,KAAK;AACbC,EAAAA,OAAO,EAAEL,SAAS;AAClBP,EAAAA,IAAI,EAAEO,SAAS;AACfM,EAAAA,mBAAmB,EAAE,KAAK;AAC1BC,EAAAA,YAAY,EAAE,CAAA;AAClB,CAAC,CAAA;AA4gBM,SAASC,gBAAgBA,CAACf,IAAI,EAAEgB,SAAS,EAAE;EACjD,IAAI;AACH,IAAA,IAAId,MAAM,GAAGF,IAAI,EAAE,CAAA;GACnB,CAAC,OAAOG,CAAC,EAAE;AACX,IAAA,OAAOa,SAAS,CAAC,IAAI,EAAEb,CAAC,CAAC,CAAA;AAC1B,GAAA;AACA,EAAA,IAAID,MAAM,IAAIA,MAAM,CAACE,IAAI,EAAE;IAC1B,OAAOF,MAAM,CAACE,IAAI,CAACY,SAAS,CAACC,IAAI,CAAC,IAAI,EAAE,KAAK,CAAC,EAAED,SAAS,CAACC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAA;AAC5E,GAAA;AACA,EAAA,OAAOD,SAAS,CAAC,KAAK,EAAEd,MAAM,CAAC,CAAA;AAChC,CAAA;AAphBA,IAAIY,YAAY,GAAG,IAAI,CAAA;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA,IAAMI,WAAW,GAAG,SAAdA,WAAWA,CAAIC,OAAO,EAAON,mBAAmB,EAAUO,OAAO,EAAUC,KAAK,EAAY;AAAA,EAAA,IAA7EF,OAAO,KAAA,KAAA,CAAA,EAAA;AAAPA,IAAAA,OAAO,GAAG,EAAE,CAAA;AAAA,GAAA;AAAA,EAAA,IAAEN,mBAAmB,KAAA,KAAA,CAAA,EAAA;AAAnBA,IAAAA,mBAAmB,GAAG,KAAK,CAAA;AAAA,GAAA;AAAA,EAAA,IAAEO,OAAO,KAAA,KAAA,CAAA,EAAA;AAAPA,IAAAA,OAAO,GAAG,KAAK,CAAA;AAAA,GAAA;AAAA,EAAA,IAAEC,KAAK,KAAA,KAAA,CAAA,EAAA;AAALA,IAAAA,KAAK,GAAG,IAAI,CAAA;AAAA,GAAA;AACzF,EAAA,IAAID,OAAO,EAAE;AACT,IAAA,IAAIP,mBAAmB,EAAES,OAAO,CAACD,KAAK,CAAA,eAAA,GAAiBF,OAAO,GAAM,KAAA,GAAA,IAAII,IAAI,EAAE,CAACC,kBAAkB,EAAE,EAAIH,KAAK,CAAC,CAAA;AACjH,GAAC,MAAM;AACH,IAAA,IAAIR,mBAAmB,EAAES,OAAO,CAACG,GAAG,mBAAiBN,OAAO,GAAA,KAAA,GAAM,IAAII,IAAI,EAAE,CAACC,kBAAkB,EAAI,CAAC,CAAA;AACxG,GAAA;AACJ,CAAC,CAAA;;AAED;AACA;AACA;AACA;AACA,IAAME,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,OAAO,EAAK;AACjC,EAAA,IAAMC,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACvB,eAAe,CAAC,CAAA;AACzC,EAAA,IAAMyB,KAAK,GAAGD,MAAM,CAACD,IAAI,CAACD,OAAO,CAAC,CAAA;AAClC,EAAA,IAAMI,aAAa,GAAGD,KAAK,CAACE,MAAM,CAAC,UAAAC,IAAI,EAAA;AAAA,IAAA,OAAI,CAACL,IAAI,CAACM,QAAQ,CAACD,IAAI,CAAC,CAAA;GAAC,CAAA,CAAA;AAEhE,EAAA,IAAIN,OAAO,CAACnB,QAAQ,KAAKD,SAAS,IAAI,OAAOoB,OAAO,CAACnB,QAAQ,KAAK,QAAQ,EAAE;AACxEU,IAAAA,WAAW,CAAC,yCAAyC,EAAEL,mBAAmB,EAAE,IAAI,EAAE,IAAIsB,KAAK,CAAC,uFAAuF,CAAC,CAAC,CAAA;AACrL,IAAA,OAAO,KAAK,CAAA;AAChB,GAAC,MAAM,IAAIR,OAAO,CAACrB,IAAI,KAAKC,SAAS,IAAI,OAAOoB,OAAO,CAACrB,IAAI,KAAK,QAAQ,EAAE;AACvEY,IAAAA,WAAW,CAAC,qCAAqC,EAAEL,mBAAmB,EAAE,IAAI,EAAE,IAAIsB,KAAK,CAAC,gFAAgF,CAAC,CAAC,CAAA;AAC1K,IAAA,OAAO,KAAK,CAAA;AAChB,GAAC,MAAM,IAAIR,OAAO,CAAChB,MAAM,KAAKJ,SAAS,KAAK,OAAOoB,OAAO,CAAChB,MAAM,KAAK,QAAQ,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,CAAC,CAACyB,OAAO,CAACT,OAAO,CAAChB,MAAM,CAAC0B,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;AACvKnB,IAAAA,WAAW,CAAC,uCAAuC,EAAEL,mBAAmB,EAAE,IAAI,EAAE,IAAIsB,KAAK,CAAC,uFAAuF,CAAC,CAAC,CAAA;AACnL,IAAA,OAAO,KAAK,CAAA;GACf,MAAM,IAAIR,OAAO,CAACf,OAAO,KAAKL,SAAS,IAAI,OAAOoB,OAAO,CAACf,OAAO,KAAK,QAAQ,IAAI0B,KAAK,CAACC,OAAO,CAACZ,OAAO,CAACf,OAAO,CAAC,EAAE;AAC/GM,IAAAA,WAAW,CAAC,wCAAwC,EAAEL,mBAAmB,EAAE,IAAI,EAAE,IAAIsB,KAAK,CAAC,0EAA0E,CAAC,CAAC,CAAA;AACvK,IAAA,OAAO,KAAK,CAAA;GACf,MAAM,IAAIR,OAAO,CAACd,mBAAmB,KAAKN,SAAS,IAAI,OAAOoB,OAAO,CAACd,mBAAmB,KAAK,SAAS,IAAIyB,KAAK,CAACC,OAAO,CAACZ,OAAO,CAACf,OAAO,CAAC,EAAE;AACxIM,IAAAA,WAAW,CAAC,oDAAoD,EAAE,IAAI,EAAE,IAAI,EAAE,IAAIiB,KAAK,CAAC,iGAAiG,CAAC,CAAC,CAAA;AAC3L,IAAA,OAAO,KAAK,CAAA;AAChB,GAAC,MAAM,IAAIR,OAAO,CAAClB,SAAS,KAAKF,SAAS,IAAI,OAAOoB,OAAO,CAAClB,SAAS,KAAK,UAAU,EAAE;AACnFS,IAAAA,WAAW,CAAC,0CAA0C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAIiB,KAAK,CAAC,oGAAoG,CAAC,CAAC,CAAA;AACpL,IAAA,OAAO,KAAK,CAAA;GACf,MAAM,IAAIR,OAAO,CAACjB,IAAI,KAAKH,SAAS,IAAK,OAAOoB,OAAO,CAACjB,IAAI,KAAK,UAAU,IAAI,CAAC4B,KAAK,CAACC,OAAO,CAACZ,OAAO,CAACjB,IAAI,CAAE,EAAE;AAC3GQ,IAAAA,WAAW,CAAC,qCAAqC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAIiB,KAAK,CAAC,8GAA8G,CAAC,CAAC,CAAA;AACzL,IAAA,OAAO,KAAK,CAAA;AAChB,GAAC,MAAM,IAAIR,OAAO,CAACb,YAAY,KAAKP,SAAS,IAAI,OAAOoB,OAAO,CAACb,YAAY,KAAK,QAAQ,EAAE;AACvFI,IAAAA,WAAW,CAAC,6CAA6C,EAAE,IAAI,EAAE,IAAI,EAAE,IAAIiB,KAAK,CAAC,6GAA6G,CAAC,CAAC,CAAA;AAChM,IAAA,OAAO,KAAK,CAAA;AAChB,GAAA;AAEA,EAAA,IAAIJ,aAAa,CAACS,MAAM,GAAG,CAAC,EAAE;AAC1BtB,IAAAA,WAAW,CAAC,kBAAkB,EAAE,IAAI,EAAE,IAAI,EAAE,IAAIiB,KAAK,CAAA,wBAAA,IAA0BJ,aAAa,CAACS,MAAM,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,CAAA,GAAA,MAAA,GAAMT,aAAa,CAACU,IAAI,CAAC,MAAM,CAAC,GAAI,KAAA,CAAC,CAAC,CAAA;AACxJ,IAAA,OAAO,KAAK,CAAA;AAChB,GAAA;AAEA,EAAA,OAAO,IAAI,CAAA;AACf,CAAC,CAAA;;AAED;AACA;AACA;AACA;AACA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIf,OAAO,EAAEgB,KAAK,EAAK;EAC1C,IAAIhB,OAAO,CAACb,YAAY,IAAIa,OAAO,CAACb,YAAY,GAAG,CAAC,EAAE;IAClDI,WAAW,CAAA,6BAAA,GAA+BS,OAAO,CAACb,YAAY,GAAG,IAAI,GAAaa,WAAAA,EAAAA,OAAO,CAACd,mBAAmB,CAAC,CAAA;IAC9G+B,YAAY,CAAC9B,YAAY,CAAC,CAAA;IAC1BA,YAAY,GAAG+B,UAAU,CAAC,YAAM;AAC5BF,MAAAA,KAAK,CAACG,OAAO,GAAG,EAAE,CAAA;AAClB5B,MAAAA,WAAW,CAAkBS,eAAAA,EAAAA,OAAO,CAACd,mBAAmB,CAAC,CAAA;AAC7D,KAAC,EAAEc,OAAO,CAACb,YAAY,CAAC,CAAA;AAC5B,GAAA;AACJ,CAAC,CAAA;AAED,IAAMiC,YAAY,gBAAGC,mBAAa,CAAC,IAAI,CAAC,CAAA;IAE3BC,aAAa,GAAG,SAAhBA,aAAaA,CAAAC,IAAA,EAAqB;AAAA,EAAA,IAAfC,QAAQ,GAAAD,IAAA,CAARC,QAAQ,CAAA;AACpC,EAAA,IAAAC,SAAA,GAA0BC,cAAQ,CAAC,IAAI,CAAC;AAAjCC,IAAAA,KAAK,GAAAF,SAAA,CAAA,CAAA,CAAA;AAAEG,IAAAA,QAAQ,GAAAH,SAAA,CAAA,CAAA,CAAA,CAAA;AACtB,EAAA,oBACII,cAAA,CAACT,YAAY,CAACU,QAAQ,EAAA;AAACC,IAAAA,KAAK,EAAE,CAACJ,KAAK,EAAEC,QAAQ,CAAE;AAAAJ,IAAAA,QAAA,EAC3CA,QAAAA;AAAQ,GACU,CAAC,CAAA;AAEhC,EAAC;IAEYQ,eAAe,GAAG,SAAlBA,eAAeA,CAAIrD,IAAI,EAAiB;AAAA,EAAA,IAArBA,IAAI,KAAA,KAAA,CAAA,EAAA;AAAJA,IAAAA,IAAI,GAAGC,SAAS,CAAA;AAAA,GAAA;AAC5C,EAAA,IAAAqD,WAAA,GAAwBC,gBAAU,CAACd,YAAY,CAAC;AAAzCe,IAAAA,IAAI,GAAAF,WAAA,CAAA,CAAA,CAAA;AAAEG,IAAAA,OAAO,GAAAH,WAAA,CAAA,CAAA,CAAA,CAAA;AAEpB,EAAA,IAAItD,IAAI,EAAE;IACN,OAAO,CAACwD,IAAI,GAAGA,IAAI,CAACxD,IAAI,CAAC,GAAGwD,IAAI,EAAE,UAACJ,KAAK,EAAA;MAAA,OAAKK,OAAO,CAAC,UAACC,IAAI,EAAA;AAAA,QAAA,IAAAC,SAAA,CAAA;AAAA,QAAA,OAAAC,QAAA,CAAA,EAAA,EAAWF,IAAI,GAAAC,SAAA,GAAA,EAAA,EAAAA,SAAA,CAAG3D,IAAI,CAAA,GAAGoD,KAAK,EAAAO,SAAA,EAAA,CAAA;AAAA,OAAG,CAAC,CAAA;KAAC,CAAA,CAAA;AACjG,GAAC,MAAM;AACH,IAAA,OAAO,CAACH,IAAI,EAAEC,OAAO,CAAC,CAAA;AAC1B,GAAA;AACJ,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMI,QAAQ,GAAG,SAAXA,QAAQA,CAAIC,GAAG,EAAEzC,OAAO,EAA8B;AAAA,EAAA,IAArCA,OAAO,KAAA,KAAA,CAAA,EAAA;IAAPA,OAAO,GAAAuC,QAAA,CAAA,EAAA,EAAQ7D,eAAe,CAAA,CAAA;AAAA,GAAA;AACxD,EAAA,IAAAgE,qBAAA,GAAAH,QAAA,CAA6F7D,EAAAA,EAAAA,eAAe,EAAKsB,OAAO,CAAA;IAAhHrB,IAAI,GAAA+D,qBAAA,CAAJ/D,IAAI;IAAEE,QAAQ,GAAA6D,qBAAA,CAAR7D,QAAQ;IAAEE,IAAI,GAAA2D,qBAAA,CAAJ3D,IAAI;IAAED,SAAS,GAAA4D,qBAAA,CAAT5D,SAAS;IAAEE,MAAM,GAAA0D,qBAAA,CAAN1D,MAAM;IAAEC,OAAO,GAAAyD,qBAAA,CAAPzD,OAAO;IAAEZ,IAAI,GAAAqE,qBAAA,CAAJrE,IAAI;IAAEa,mBAAmB,GAAAwD,qBAAA,CAAnBxD,mBAAmB,CAAA;AAEnFa,EAAAA,eAAe,CAAAwC,QAAA,CAAA,EAAA,EAAM7D,eAAe,EAAKsB,OAAO,CAAE,CAAC,CAAA;AAEnD,EAAA,IAAMgB,KAAK,GAAG2B,YAAM,CAAC,EAAE,CAAC,CAAA;AAExB,EAAA,IAAAC,gBAAA,GAAwBZ,eAAe,CAACrD,IAAI,CAAC;AAAtCwD,IAAAA,IAAI,GAAAS,gBAAA,CAAA,CAAA,CAAA;AAAER,IAAAA,OAAO,GAAAQ,gBAAA,CAAA,CAAA,CAAA,CAAA;AACpB,EAAA,IAAAC,UAAA,GAA0BnB,cAAQ,CAAC,IAAI,CAAC;AAAjChC,IAAAA,KAAK,GAAAmD,UAAA,CAAA,CAAA,CAAA;AAAEC,IAAAA,QAAQ,GAAAD,UAAA,CAAA,CAAA,CAAA,CAAA;AACtB,EAAA,IAAAE,UAAA,GAA8BrB,cAAQ,CAAC,KAAK,CAAC;AAAtCsB,IAAAA,OAAO,GAAAD,UAAA,CAAA,CAAA,CAAA;AAAEE,IAAAA,UAAU,GAAAF,UAAA,CAAA,CAAA,CAAA,CAAA;EAE1B,IAAMG,SAAS,GAATA,SAAAA,SAASA,GAAA;IAAA,IAAe;AAC1B3D,MAAAA,WAAW,CAAC,kBAAkB,EAAEL,mBAAmB,CAAC,CAAA;AAEpD,MAAA,IAAIQ,KAAK,EAAEoD,QAAQ,CAAC,IAAI,CAAC,CAAA;AACzB,MAAA,IAAI,CAACE,OAAO,EAAEC,UAAU,CAAC,IAAI,CAAC,CAAA;AAE9B,MAAA,IAAIjC,KAAK,CAACG,OAAO,CAACsB,GAAG,CAAC,EAAE;AACpBlD,QAAAA,WAAW,CAAC,4CAA4C,EAAEL,mBAAmB,CAAC,CAAA;QAC9E,IAAI,OAAOJ,SAAS,KAAK,UAAU,EAAES,WAAW,CAAC,8BAA8B,EAAEL,mBAAmB,CAAC,CAAA;AACrG,QAAA,IAAI,OAAOH,IAAI,KAAK,UAAU,IAAI4B,KAAK,CAACC,OAAO,CAAC7B,IAAI,CAAC,EAAEQ,WAAW,CAAC,yBAAyB,EAAEL,mBAAmB,CAAC,CAAA;AAElHkD,QAAAA,OAAO,CAACpB,KAAK,CAACG,OAAO,CAACsB,GAAG,CAAC,CAAC,CAAA;AAC3B1B,QAAAA,iBAAiB,CAACf,OAAO,EAAEgB,KAAK,CAAC,CAAA;QACjCiC,UAAU,CAAC,KAAK,CAAC,CAAA;QACjB,OAAAE,OAAA,CAAAC,OAAA,EAAA,CAAA;AACJ,OAAA;MAAC,IAAAC,KAAA,GAAAjE,gBAAA,CAAA,YAAA;AAAA,QAAA,OAAAhB,MAAA,CAEG,YAAA;AACAmB,UAAAA,WAAW,CAAC,wDAAwD,EAAEL,mBAAmB,CAAC,CAAA;AAAC,UAAA,OAAAiE,OAAA,CAAAC,OAAA,CAEpEE,KAAK,CAACb,GAAG,EAAE;AAAEzD,YAAAA,MAAM,EAANA,MAAM;AAAEC,YAAAA,OAAO,EAAPA,OAAO;AAAEkD,YAAAA,IAAI,EAAE9D,IAAAA;AAAK,WAAC,CAAC,CAAA,CAAAI,IAAA,CAAA,UAA5D8E,QAAQ,EAAA;AAAA,YAAA,OAAAJ,OAAA,CAAAC,OAAA,CACOG,QAAQ,CAACC,IAAI,EAAE,CAAA,CAAA/E,IAAA,CAAA,UAA9BF,MAAM,EAAA;cAAA,IAERgF,QAAQ,CAACE,EAAE,EAAA;gBACX,IAAMC,OAAO,GAAG7E,QAAQ,GAAGN,MAAM,CAACM,QAAQ,CAAC,GAAGN,MAAM,CAAA;gBACpD,IAAI,OAAOO,SAAS,KAAK,UAAU,EAAES,WAAW,CAAC,8BAA8B,EAAEL,mBAAmB,CAAC,CAAA;AACrG,gBAAA,IAAIyE,gBAAgB,GAAG,OAAO7E,SAAS,KAAK,UAAU,GAAGA,SAAS,CAAC4E,OAAO,CAAC,GAAGA,OAAO,CAAA;gBACrF,IAAI,OAAO3E,IAAI,KAAK,UAAU,IAAI4B,KAAK,CAACC,OAAO,CAAC7B,IAAI,CAAC,EAAE;AACnDQ,kBAAAA,WAAW,CAAC,yBAAyB,EAAEL,mBAAmB,CAAC,CAAA;AAC3DyE,kBAAAA,gBAAgB,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACH,gBAAgB,EAAE5E,IAAI,CAAC,CAAC,CAAA;AACzE,iBAAA;gBACAqD,OAAO,CAACuB,gBAAgB,CAAC,CAAA;AACzBpE,gBAAAA,WAAW,CAAC,cAAc,EAAEL,mBAAmB,CAAC,CAAA;AAChD8B,gBAAAA,KAAK,CAACG,OAAO,CAACsB,GAAG,CAAC,GAAGkB,gBAAgB,CAAA;AACrC5C,gBAAAA,iBAAiB,CAACf,OAAO,EAAEgB,KAAK,CAAC,CAAA;AACjCzB,gBAAAA,WAAW,CAAkCkD,iCAAAA,GAAAA,GAAG,GAAKvD,IAAAA,EAAAA,mBAAmB,CAAC,CAAA;AAAC,eAAA,MAAA;gBAE1E4D,QAAQ,CAACvE,MAAM,CAAC,CAAA;gBAChBgB,WAAW,CAAC,mBAAmB,EAAEL,mBAAmB,EAAE,IAAI,EAAEX,MAAM,CAAC,CAAA;AAAC,eAAA;AAAA,aAAA,CAAA,CAAA;AAAA,WAAA,CAAA,CAAA;SAE3E,EAAA,UAAQwF,GAAG,EAAE;UACVjB,QAAQ,CAACiB,GAAG,CAAC,CAAA;UACbxE,WAAW,CAAC,mBAAmB,EAAEL,mBAAmB,EAAE,IAAI,EAAE6E,GAAG,CAAC,CAAA;SACnE,CAAA,CAAA;OAAAC,EAAAA,UAAAA,UAAA,EAAAC,QAAA,EAAA;QACGhB,UAAU,CAAC,KAAK,CAAC,CAAA;AACjB1D,QAAAA,WAAW,CAAC,4BAA4B,EAAEL,mBAAmB,CAAC,CAAA;QAAC,IAAA8E,UAAA,QAAAC,QAAA,CAAA;AAAA,QAAA,OAAAA,QAAA,CAAA;AAAA,OAAA,CAAA,CAAA;AAAA,MAAA,OAAAd,OAAA,CAAAC,OAAA,CAAAC,KAAA,IAAAA,KAAA,CAAA5E,IAAA,GAAA4E,KAAA,CAAA5E,IAAA,CAAA,YAAA,EAAA,CAAA,GAAA,KAAA,CAAA,CAAA,CAAA;AAEvE,KAAC,QAAAD,CAAA,EAAA;AAAA,MAAA,OAAA2E,OAAA,CAAAe,MAAA,CAAA1F,CAAA,CAAA,CAAA;AAAA,KAAA;AAAA,GAAA,CAAA;AAED2F,EAAAA,eAAS,CAAE,YAAM;AACbjB,IAAAA,SAAS,EAAE,CAAA;AACf,GAAC,EAAE,CAACT,GAAG,CAAC,CAAC,CAAA;EAET,OAAO;AACHN,IAAAA,IAAI,EAAJA,IAAI;AACJzC,IAAAA,KAAK,EAALA,KAAK;AACLsD,IAAAA,OAAO,EAAPA,OAAO;AACPoB,IAAAA,MAAM,EAAEhC,OAAO;AACfiC,IAAAA,OAAO,EAAEnB,SAAS;AAClBlC,IAAAA,KAAK,EAAE;AACHsD,MAAAA,GAAG,EAAE,SAAAA,GAAC7B,CAAAA,GAAG,EAAK;QACV,OAAOA,GAAG,GAAGzB,KAAK,CAACG,OAAO,CAACsB,GAAG,CAAC,GAAGzB,KAAK,CAACG,OAAO,CAAA;OAClD;AACDoD,MAAAA,GAAG,EAAE,SAAAA,GAAC9B,CAAAA,GAAG,EAAK;AACV,QAAA,OAAOzB,KAAK,CAACG,OAAO,CAACsB,GAAG,CAAC,CAAA;OAC5B;MACD+B,KAAK,EAAE,SAAAA,KAAAA,GAAM;AACTxD,QAAAA,KAAK,CAACG,OAAO,GAAG,EAAE,CAAA;QAClB5B,WAAW,CAAA,eAAA,EAAkBL,mBAAmB,CAAC,CAAA;AACrD,OAAA;AACJ,KAAA;GACH,CAAA;AACL,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMuF,aAAa,GAAG,SAAhBA,aAAaA,CAAIhC,GAAG,EAAEzC,OAAO,EAA8B;AAAA,EAAA,IAArCA,OAAO,KAAA,KAAA,CAAA,EAAA;IAAPA,OAAO,GAAAuC,QAAA,CAAA,EAAA,EAAQ7D,eAAe,CAAA,CAAA;AAAA,GAAA;AAC7D,EAAA,IAAAgG,UAAA,GAAkChD,cAAQ,CAAC,KAAK,CAAC;AAA1CiD,IAAAA,SAAS,GAAAD,UAAA,CAAA,CAAA,CAAA;AAAEE,IAAAA,YAAY,GAAAF,UAAA,CAAA,CAAA,CAAA,CAAA;AAE9B,EAAA,IAAAG,sBAAA,GAAAtC,QAAA,CAA6F7D,EAAAA,EAAAA,eAAe,EAAKsB,OAAO,CAAA;IAAhHrB,IAAI,GAAAkG,sBAAA,CAAJlG,IAAI;IAAEE,QAAQ,GAAAgG,sBAAA,CAARhG,QAAQ;IAAEE,IAAI,GAAA8F,sBAAA,CAAJ9F,IAAI;IAAED,SAAS,GAAA+F,sBAAA,CAAT/F,SAAS;IAAEE,MAAM,GAAA6F,sBAAA,CAAN7F,MAAM;IAAEC,OAAO,GAAA4F,sBAAA,CAAP5F,OAAO;IAAEZ,IAAI,GAAAwG,sBAAA,CAAJxG,IAAI;IAAEa,mBAAmB,GAAA2F,sBAAA,CAAnB3F,mBAAmB,CAAA;AAEnFa,EAAAA,eAAe,CAAAwC,QAAA,CAAA,EAAA,EAAM7D,eAAe,EAAKsB,OAAO,CAAE,CAAC,CAAA;AAEnD,EAAA,IAAMgB,KAAK,GAAG2B,YAAM,CAAC,EAAE,CAAC,CAAA;AAExB,EAAA,IAAAmC,iBAAA,GAAwB9C,eAAe,CAACrD,IAAI,CAAC;AAAtCwD,IAAAA,IAAI,GAAA2C,iBAAA,CAAA,CAAA,CAAA;AAAE1C,IAAAA,OAAO,GAAA0C,iBAAA,CAAA,CAAA,CAAA,CAAA;AACpB,EAAA,IAAAC,UAAA,GAA0BrD,cAAQ,CAAC,IAAI,CAAC;AAAjChC,IAAAA,KAAK,GAAAqF,UAAA,CAAA,CAAA,CAAA;AAAEjC,IAAAA,QAAQ,GAAAiC,UAAA,CAAA,CAAA,CAAA,CAAA;AACtB,EAAA,IAAAC,UAAA,GAA8BtD,cAAQ,CAAC,KAAK,CAAC;AAAtCsB,IAAAA,OAAO,GAAAgC,UAAA,CAAA,CAAA,CAAA;AAAE/B,IAAAA,UAAU,GAAA+B,UAAA,CAAA,CAAA,CAAA,CAAA;EAE1B,IAAM9B,SAAS,GAATA,SAAAA,SAASA,GAAA;IAAA,IAAe;AAC1B3D,MAAAA,WAAW,CAAC,kBAAkB,EAAEL,mBAAmB,CAAC,CAAA;AAEpD,MAAA,IAAIQ,KAAK,EAAEoD,QAAQ,CAAC,IAAI,CAAC,CAAA;AACzB,MAAA,IAAI,CAACE,OAAO,EAAEC,UAAU,CAAC,IAAI,CAAC,CAAA;AAE9B,MAAA,IAAIjC,KAAK,CAACG,OAAO,CAACsB,GAAG,CAAC,EAAE;AACpBlD,QAAAA,WAAW,CAAC,4CAA4C,EAAEL,mBAAmB,CAAC,CAAA;QAC9E,IAAI,OAAOJ,SAAS,KAAK,UAAU,EAAES,WAAW,CAAC,8BAA8B,EAAEL,mBAAmB,CAAC,CAAA;AACrG,QAAA,IAAI,OAAOH,IAAI,KAAK,UAAU,IAAI4B,KAAK,CAACC,OAAO,CAAC7B,IAAI,CAAC,EAAEQ,WAAW,CAAC,yBAAyB,EAAEL,mBAAmB,CAAC,CAAA;AAElHkD,QAAAA,OAAO,CAACpB,KAAK,CAACG,OAAO,CAACsB,GAAG,CAAC,CAAC,CAAA;AAC3B1B,QAAAA,iBAAiB,CAACf,OAAO,EAAEgB,KAAK,CAAC,CAAA;QACjCiC,UAAU,CAAC,KAAK,CAAC,CAAA;QACjB,OAAAE,OAAA,CAAAC,OAAA,EAAA,CAAA;AACJ,OAAA;MAAC,IAAA6B,MAAA,GAAA7F,gBAAA,CAAA,YAAA;AAAA,QAAA,OAAAhB,MAAA,CAEG,YAAA;AACAmB,UAAAA,WAAW,CAAC,wDAAwD,EAAEL,mBAAmB,CAAC,CAAA;AAAC,UAAA,OAAAiE,OAAA,CAAAC,OAAA,CAEpEE,KAAK,CAACb,GAAG,EAAE;AAAEzD,YAAAA,MAAM,EAANA,MAAM;AAAEC,YAAAA,OAAO,EAAPA,OAAO;AAAEkD,YAAAA,IAAI,EAAE9D,IAAAA;AAAK,WAAC,CAAC,CAAA,CAAAI,IAAA,CAAA,UAA5D8E,QAAQ,EAAA;AAAA,YAAA,OAAAJ,OAAA,CAAAC,OAAA,CACOG,QAAQ,CAACC,IAAI,EAAE,CAAA,CAAA/E,IAAA,CAAA,UAA9BF,MAAM,EAAA;cAAA,IAERgF,QAAQ,CAACE,EAAE,EAAA;gBACX,IAAMC,OAAO,GAAG7E,QAAQ,GAAGN,MAAM,CAACM,QAAQ,CAAC,GAAGN,MAAM,CAAA;gBACpD,IAAI,OAAOO,SAAS,KAAK,UAAU,EAAES,WAAW,CAAC,8BAA8B,EAAEL,mBAAmB,CAAC,CAAA;AACrG,gBAAA,IAAIyE,gBAAgB,GAAG,OAAO7E,SAAS,KAAK,UAAU,GAAGA,SAAS,CAAC4E,OAAO,CAAC,GAAGA,OAAO,CAAA;gBACrF,IAAI,OAAO3E,IAAI,KAAK,UAAU,IAAI4B,KAAK,CAACC,OAAO,CAAC7B,IAAI,CAAC,EAAE;AACnDQ,kBAAAA,WAAW,CAAC,yBAAyB,EAAEL,mBAAmB,CAAC,CAAA;AAC3DyE,kBAAAA,gBAAgB,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACH,gBAAgB,EAAE5E,IAAI,CAAC,CAAC,CAAA;AACzE,iBAAA;gBACAqD,OAAO,CAACuB,gBAAgB,CAAC,CAAA;AACzBpE,gBAAAA,WAAW,CAAC,cAAc,EAAEL,mBAAmB,CAAC,CAAA;AAChD8B,gBAAAA,KAAK,CAACG,OAAO,CAACsB,GAAG,CAAC,GAAGkB,gBAAgB,CAAA;AACrC5C,gBAAAA,iBAAiB,CAACf,OAAO,EAAEgB,KAAK,CAAC,CAAA;AACjCzB,gBAAAA,WAAW,CAAkCkD,iCAAAA,GAAAA,GAAG,GAAKvD,IAAAA,EAAAA,mBAAmB,CAAC,CAAA;AAAC,eAAA,MAAA;gBAE1E4D,QAAQ,CAACvE,MAAM,CAAC,CAAA;gBAChBgB,WAAW,CAAC,mBAAmB,EAAEL,mBAAmB,EAAE,IAAI,EAAEX,MAAM,CAAC,CAAA;AAAC,eAAA;AAAA,aAAA,CAAA,CAAA;AAAA,WAAA,CAAA,CAAA;SAE3E,EAAA,UAAQwF,GAAG,EAAE;UACVjB,QAAQ,CAACiB,GAAG,CAAC,CAAA;UACbxE,WAAW,CAAC,mBAAmB,EAAEL,mBAAmB,EAAE,IAAI,EAAE6E,GAAG,CAAC,CAAA;SACnE,CAAA,CAAA;OAAAmB,EAAAA,UAAAA,WAAA,EAAAC,QAAA,EAAA;QACGlC,UAAU,CAAC,KAAK,CAAC,CAAA;AACjB1D,QAAAA,WAAW,CAAC,4BAA4B,EAAEL,mBAAmB,CAAC,CAAA;QAAC,IAAAgG,WAAA,QAAAC,QAAA,CAAA;AAAA,QAAA,OAAAA,QAAA,CAAA;AAAA,OAAA,CAAA,CAAA;AAAA,MAAA,OAAAhC,OAAA,CAAAC,OAAA,CAAA6B,MAAA,IAAAA,MAAA,CAAAxG,IAAA,GAAAwG,MAAA,CAAAxG,IAAA,CAAA,YAAA,EAAA,CAAA,GAAA,KAAA,CAAA,CAAA,CAAA;AAEvE,KAAC,QAAAD,CAAA,EAAA;AAAA,MAAA,OAAA2E,OAAA,CAAAe,MAAA,CAAA1F,CAAA,CAAA,CAAA;AAAA,KAAA;AAAA,GAAA,CAAA;EAED,IAAM4G,WAAW,GAAGC,iBAAW,CAAA,YAAA;IAAA,IAAa;AAC1C;AACA,MAAA,IAAIV,SAAS,EAAE,OAAAxB,OAAA,CAAAC,OAAA,EAAA,CAAA;AACf;MACAwB,YAAY,CAAC,IAAI,CAAC,CAAA;AAClB;MAAA,OAAAzB,OAAA,CAAAC,OAAA,CACMF,SAAS,EAAE,EAAAzE,IAAA,CAAA,YAAA;AACjB;QACAmG,YAAY,CAAC,KAAK,CAAC,CAAA;AAAC,OAAA,CAAA,CAAA;AACtB,KAAC,QAAApG,CAAA,EAAA;AAAA,MAAA,OAAA2E,OAAA,CAAAe,MAAA,CAAA1F,CAAA,CAAA,CAAA;AAAA,KAAA;AAAA,GAAA,EAAE,CAACmG,SAAS,EAAElC,GAAG,CAAC,CAAC,CAAC;;EAErB,OAAO;AACH2C,IAAAA,WAAW,EAAXA,WAAW;AACXT,IAAAA,SAAS,EAATA,SAAS;AACTxC,IAAAA,IAAI,EAAJA,IAAI;AACJzC,IAAAA,KAAK,EAALA,KAAK;AACLsD,IAAAA,OAAO,EAAPA,OAAO;AACPoB,IAAAA,MAAM,EAAEhC,OAAO;AACfiC,IAAAA,OAAO,EAAEnB,SAAS;AAClBlC,IAAAA,KAAK,EAAE;AACHsD,MAAAA,GAAG,EAAE,SAAAA,GAAC7B,CAAAA,GAAG,EAAK;QACV,OAAOA,GAAG,GAAGzB,KAAK,CAACG,OAAO,CAACsB,GAAG,CAAC,GAAGzB,KAAK,CAACG,OAAO,CAAA;OAClD;AACDoD,MAAAA,GAAG,EAAE,SAAAA,GAAC9B,CAAAA,GAAG,EAAK;AACV,QAAA,OAAOzB,KAAK,CAACG,OAAO,CAACsB,GAAG,CAAC,CAAA;OAC5B;MACD+B,KAAK,EAAE,SAAAA,KAAAA,GAAM;AACTxD,QAAAA,KAAK,CAACG,OAAO,GAAG,EAAE,CAAA;QAClB5B,WAAW,CAAA,eAAA,EAAkBL,mBAAmB,CAAC,CAAA;AACrD,OAAA;AACJ,KAAA;GACH,CAAA;AACH;;;;;;;"}