{"version":3,"file":"index.modern.js","sources":["../src/index.js"],"sourcesContent":["import { useState, useEffect, useRef, createContext, useContext } from 'react';\r\n\r\n/**\r\n * @callback QueryResultCacheFn\r\n * @param {string} url\r\n * \r\n * @typedef {object} QueryResultCache\r\n * @property {QueryResultCacheFn} get\r\n * @property {QueryResultCacheFn} has\r\n * @property {QueryResultCacheFn} clear\r\n *\r\n * @typedef {object} QueryResult\r\n * @property {*} data\r\n * @property {Error|false} error\r\n * @property {boolean} loading\r\n * @property {function} updateData\r\n * @property {function} refresh\r\n * @property {QueryResultCache} cache\r\n * \r\n * @typedef {object} DefaultUseQueryOptions\r\n * @property {string} [selector] \r\n * @property {function} [manipulate] \r\n * @property {string} [method=\"GET\"] \r\n * @property {object} [headers] \r\n * @property {*} [body] \r\n * @property {boolean} [isDebuggerActivated=false] \r\n * @property {number} [cacheTimeout=0] \r\n */\r\n\r\nconst DEFAULT_OPTIONS = {\r\n    selector: undefined,\r\n    manipulate: undefined,\r\n    method: \"GET\",\r\n    headers: undefined,\r\n    body: undefined,\r\n    isDebuggerActivated: false,\r\n    cacheTimeout: 0,\r\n};\r\n\r\nlet cacheTimeout = null;\r\n\r\n/**\r\n * @param {string} [message=\"\"] \r\n * @param {boolean} [isDebuggerActivated=false]\r\n * @param {boolean} [isError=false] \r\n * @param {null|string|Error} [error=null]\r\n */\r\nconst logDebugger = (message = \"\", isDebuggerActivated = false, isError = false, error = null) => {\r\n    if (isError) {\r\n        if (isDebuggerActivated) console.error(`[USE_QUERY]: ${message} - ${new Date().toLocaleTimeString()}`, error);\r\n    } else {\r\n        if (isDebuggerActivated) console.log(`[USE_QUERY]: ${message} - ${new Date().toLocaleTimeString()}`);\r\n    }\r\n}\r\n\r\n/**\r\n * @param {DefaultUseQueryOptions} options \r\n * @returns {boolean}\r\n */\r\nconst validateOptions = (options) => {\r\n    const keys = Object.keys(DEFAULT_OPTIONS);\r\n    const _keys = Object.keys(options);\r\n    const symDifference = _keys.filter(item => !keys.includes(item));\r\n\r\n    if (options.selector !== undefined && typeof options.selector !== \"string\") {\r\n        logDebugger(\"Validation error for `options.selector`\", isDebuggerActivated, true, new Error(\"Selector must be a string. It should contains key value to select from result object.\"));\r\n        return false;\r\n    } else if (options.method !== undefined && (typeof options.method !== \"string\" || [\"GET\", \"POST\", \"PUT\", \"PATCH\", \"DELETE\"].indexOf(options.method.toUpperCase()) === -1)) {\r\n        logDebugger(\"Validation error for `options.method`\", isDebuggerActivated, true, new Error('Method must be a string. It should be one of \"GET\", \"POST\", \"PUT\", \"PATCH\", \"DELETE\".'));\r\n        return false;\r\n    } else if (options.headers !== undefined && typeof options.headers !== \"object\" && Array.isArray(options.headers)) {\r\n        logDebugger(\"Validation error for `options.headers`\", isDebuggerActivated, true, new Error(\"Headers must be an object. It should contains request headers key value.\"));\r\n        return false;\r\n    } else if (options.isDebuggerActivated !== undefined && typeof options.isDebuggerActivated !== \"boolean\" && Array.isArray(options.headers)) {\r\n        logDebugger(\"Validation error for `options.isDebuggerActivated`\", true, true, new Error(\"isDebuggerActivated must be a boolean. It should be activated if you need to debug all process.\"));\r\n        return false;\r\n    } else if (options.manipulate !== undefined && typeof options.manipulate !== \"function\") {\r\n        logDebugger(\"Validation error for `options.manipulate`\", true, true, new Error(\"manipulate must be a function. It rappresent the funcion to manipulate data before saving on state.\"));\r\n        return false;\r\n    } else if (options.cacheTimeout !== undefined && typeof options.cacheTimeout !== \"number\") {\r\n        logDebugger(\"Validation error for `options.cacheTimeout`\", true, true, new Error(\"cacheTimeout must be a number. It rappresent the timeout to remove cached data from memory in milliseconds.\"));\r\n        return false;\r\n    }\r\n    \r\n    if (symDifference.length > 0) {\r\n        logDebugger(\"Validation error\", true, true, new Error(`Found not valid option${symDifference.length > 1 ? \"s\" : \"\"}: \"${symDifference.join('\", \"')}\".`));\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/**\r\n * @param {DefaultUseQueryOptions} options \r\n * @param {MutableRefObject} cache \r\n */\r\nconst timeoutCacheClear = (options, cache) => {\r\n    if (options.cacheTimeout && options.cacheTimeout > 0) {\r\n        logDebugger(`Cache clear timeout start: ${options.cacheTimeout / 1000} seconds.`, options.isDebuggerActivated);\r\n        clearTimeout(cacheTimeout);\r\n        cacheTimeout = setTimeout(() => {\r\n            cache.current = {};\r\n            logDebugger(`Cache cleared`, options.isDebuggerActivated);\r\n        }, options.cacheTimeout);\r\n    }\r\n}\r\n\r\nconst QueryContext = createContext(null);\r\n\r\nexport const QueryProvider = ({ children }) => {\r\n    const [state, setState] = useState(null);\r\n    return (\r\n        <QueryContext.Provider value={[state, setState]}>\r\n            {children}\r\n        </QueryContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useQueryContext = () => useContext(QueryContext);\r\n\r\n/**\r\n * Use query hook that manage requests, cache and other features.\r\n * @param {string} url \r\n * @param {object} options\r\n * @param {string} [options.selector] Selector must be a string. It should contains key value to select from result object.\r\n * @param {function} [options.manipulate] manipulate must be a function. It rappresent the funcion to manipulate data before saving on state. If you need to mutate data, use `mutate` function instead\r\n * @param {string} [options.method] Method must be a string. It should be one of \"GET\", \"POST\", \"PUT\", \"PATCH\", \"DELETE\".\r\n * @param {object} [options.headers] Headers must be an object. It should contains request headers key value.\r\n * @param {*} [options.body]\r\n * @param {boolean} [options.isDebuggerActivated] isDebuggerActivated must be a boolean. It should be activated if you need to debug all process.\r\n * @param {number} [options.cacheTimeout] cacheTimeout must be a number. It rappresent the timeout to remove cached data from memory in milliseconds.\r\n * @returns {QueryResult}\r\n */\r\nexport const useQuery = (url, options = { ...DEFAULT_OPTIONS }) => {\r\n    const { selector, manipulate, method, headers, body, isDebuggerActivated } = { ...DEFAULT_OPTIONS, ...options };\r\n\r\n    validateOptions({ ...DEFAULT_OPTIONS, ...options });\r\n    \r\n    const cache = useRef({});\r\n\r\n    const [data, setData] = useQueryContext();\r\n    const [error, setError] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const fetchData = async () => {\r\n        logDebugger(\"Fetching data...\", isDebuggerActivated);\r\n\r\n        if (error) setError(null);\r\n        if (!loading) setLoading(true);\r\n\r\n        if (cache.current[url]) {\r\n            logDebugger(\"Get data from cache, no need a new request\", isDebuggerActivated);\r\n            if (typeof manipulate === \"function\") logDebugger(\"Manipulate data before saving\", isDebuggerActivated);\r\n\r\n            setData(cache.current[url]);\r\n            timeoutCacheClear(options, cache);\r\n            setLoading(false);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            logDebugger(\"No data found in cache, proceed to do a new request...\", isDebuggerActivated);\r\n\r\n            const response = await fetch(url, { method, headers, data: body });\r\n            const result = await response.json();\r\n\r\n            if (response.ok) {\r\n                const _result = selector ? result[selector] : result;\r\n                if (typeof manipulate === \"function\") logDebugger(\"Manipulate data before saving\", isDebuggerActivated);\r\n                setData(typeof manipulate === \"function\" ? manipulate(_result) : _result);\r\n                logDebugger(\"Request done\", isDebuggerActivated);\r\n                cache.current[url] = typeof manipulate === \"function\" ? manipulate(_result) : _result;\r\n                timeoutCacheClear(options, cache);\r\n                logDebugger(`New data saved on cache for: \"${url}\"`, isDebuggerActivated);\r\n            } else {\r\n                setError(result);\r\n                logDebugger(\"An error occurred\", isDebuggerActivated, true, result);\r\n            }\r\n        } catch (err) {\r\n            setError(err);\r\n            logDebugger(\"An error occurred\", isDebuggerActivated, true, err);\r\n        } finally {\r\n            setLoading(false);\r\n            logDebugger(\"Data seatled, process done\", isDebuggerActivated);\r\n        }\r\n    };\r\n\r\n    useEffect (() => {\r\n        fetchData();\r\n    }, [url]);\r\n\r\n    return {\r\n        data,\r\n        error,\r\n        loading,\r\n        updateData: setData,\r\n        refresh: fetchData,\r\n        cache: {\r\n            get: (url) => {\r\n                return url ? cache.current[url] : cache.current;\r\n            },\r\n            has: (url) => {\r\n                return cache.current[url];\r\n            },\r\n            clear: () => {\r\n                cache.current = {};\r\n                logDebugger(`Cache cleared`, isDebuggerActivated);\r\n            }\r\n        }\r\n    };\r\n};"],"names":["DEFAULT_OPTIONS","selector","undefined","manipulate","method","headers","body","isDebuggerActivated","cacheTimeout","logDebugger","message","isError","error","console","Date","toLocaleTimeString","log","validateOptions","options","keys","Object","symDifference","filter","item","includes","Error","indexOf","toUpperCase","Array","isArray","length","join","timeoutCacheClear","cache","clearTimeout","setTimeout","current","QueryContext","createContext","QueryProvider","children","state","setState","useState","h","Provider","value","useQueryContext","useContext","useQuery","url","_extends","useRef","data","setData","setError","loading","setLoading","fetchData","async","response","fetch","result","json","ok","_result","err","useEffect","updateData","refresh","get","has","clear"],"mappings":"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"}