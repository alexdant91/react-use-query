{"version":3,"file":"index.modern.tsx","sources":["../src/index.tsx"],"sourcesContent":["// @ts-ignore\nimport { useState, useEffect, useRef, createContext, useContext, useCallback, Dispatch, SetStateAction, MutableRefObject } from 'react';\n\ninterface QueryResultCacheFn {\n    get: Function,\n    has: Function,\n    clear: Function,\n}\n\ninterface QueryResult {\n    data: any;\n    error: Error | false | null;\n    loading: boolean;\n    mutate: Function;\n    refresh: Function;\n    cache: QueryResultCacheFn;\n}\n\ninterface QueryEventResult {\n    sendRequest: Function;\n    isSending: boolean;\n    data: any;\n    error: Error | false | null;\n    loading: boolean;\n    mutate: Function;\n    refresh: Function;\n    cache: QueryResultCacheFn;\n}\n\ninterface DefaultUseQueryOptions {\n    name?: string;\n    selector?: string;\n    pick?: Array<any> | Function;\n    transform?: Function;\n    method?: string;\n    headers?: object;\n    body?: any;\n    isDebuggerActivated?: boolean;\n    cacheTimeout?: number;\n}\n\ninterface CacheObject {\n    current: object\n}\n\ninterface CreateStoreReturn {\n    __value: object\n}\n\ntype DispatchersActions = {\n    actions: object\n}\n\ntype DispatcherOptions = {\n    name: string,\n    actions: object\n}\n\nconst DEFAULT_OPTIONS: DefaultUseQueryOptions = {\n    name: undefined,\n    selector: undefined,\n    transform: undefined,\n    pick: undefined,\n    method: \"GET\",\n    headers: undefined,\n    body: undefined,\n    isDebuggerActivated: false,\n    cacheTimeout: 0,\n};\n\nconst dispatchers: DispatchersActions = {\n    actions: {}\n};\n\nconst cache: CacheObject = {\n    current: {}\n}\n\nlet cacheTimeout: number | null = null;\n\n/**\n * @param {string} [message=\"\"] \n * @param {boolean} [isDebuggerActivated=false]\n * @param {boolean} [isError=false] \n * @param {null|string|Error} [error=null]\n */\nconst logDebugger = (message: string = \"\", isDebuggerActivated: boolean = false, isError: boolean = false, error: null | Error = null) => {\n    if (isError) {\n        if (isDebuggerActivated) console.error(`[USE_QUERY]: ${message} - ${new Date().toLocaleTimeString()}`, error);\n    } else {\n        if (isDebuggerActivated) console.log(`[USE_QUERY]: ${message} - ${new Date().toLocaleTimeString()}`);\n    }\n}\n\n/**\n * @param {DefaultUseQueryOptions} options \n * @returns {boolean}\n */\nconst validateOptions = (options: DefaultUseQueryOptions): boolean => {\n    const keys = Object.keys(DEFAULT_OPTIONS);\n    const _keys = Object.keys(options);\n    const symDifference = _keys.filter(item => !keys.includes(item));\n\n    if (options.selector !== undefined && typeof options.selector !== \"string\") {\n        logDebugger(\"Validation error for `options.selector`\", options.isDebuggerActivated, true, new Error(\"Selector must be a string. It should contains key value to select from result object.\"));\n        return false;\n    } else if (options.name !== undefined && typeof options.name !== \"string\") {\n        logDebugger(\"Validation error for `options.name`\", options.isDebuggerActivated, true, new Error(\"Name must be a string. It should contains data name to retrieve it from state.\"));\n        return false;\n    } else if (options.method !== undefined && (typeof options.method !== \"string\" || [\"GET\", \"POST\", \"PUT\", \"PATCH\", \"DELETE\"].indexOf(options.method.toUpperCase()) === -1)) {\n        logDebugger(\"Validation error for `options.method`\", options.isDebuggerActivated, true, new Error('Method must be a string. It should be one of \"GET\", \"POST\", \"PUT\", \"PATCH\", \"DELETE\".'));\n        return false;\n    } else if (options.headers !== undefined && typeof options.headers !== \"object\" && Array.isArray(options.headers)) {\n        logDebugger(\"Validation error for `options.headers`\", options.isDebuggerActivated, true, new Error(\"Headers must be an object. It should contains request headers key value.\"));\n        return false;\n    } else if (options.isDebuggerActivated !== undefined && typeof options.isDebuggerActivated !== \"boolean\" && Array.isArray(options.headers)) {\n        logDebugger(\"Validation error for `options.isDebuggerActivated`\", true, true, new Error(\"isDebuggerActivated must be a boolean. It should be activated if you need to debug all process.\"));\n        return false;\n    } else if (options.transform !== undefined && typeof options.transform !== \"function\") {\n        logDebugger(\"Validation error for `options.transform`\", true, true, new Error(\"transform must be a function. It rappresent the function to transform data before saving on state.\"));\n        return false;\n    } else if (options.pick !== undefined && (typeof options.pick !== \"function\" && !Array.isArray(options.pick))) {\n        logDebugger(\"Validation error for `options.pick`\", true, true, new Error(\"pick must be a function or an array. It rappresent the function or the array to pick just a portion of data.\"));\n        return false;\n    } else if (options.cacheTimeout !== undefined && typeof options.cacheTimeout !== \"number\") {\n        logDebugger(\"Validation error for `options.cacheTimeout`\", true, true, new Error(\"cacheTimeout must be a number. It rappresent the timeout to remove cached data from memory in milliseconds.\"));\n        return false;\n    }\n    \n    if (symDifference.length > 0) {\n        logDebugger(\"Validation error\", true, true, new Error(`Found not valid option${symDifference.length > 1 ? \"s\" : \"\"}: \"${symDifference.join('\", \"')}\".`));\n        return false;\n    }\n\n    return true;\n}\n\n/**\n * @param {DefaultUseQueryOptions} options \n * @param {MutableRefObject} cache \n */\nconst timeoutCacheClear = (options: DefaultUseQueryOptions, cache: MutableRefObject<any>) => {\n    if (options.cacheTimeout && options.cacheTimeout > 0) {\n        logDebugger(`Cache clear timeout start: ${options.cacheTimeout / 1000} seconds.`, options.isDebuggerActivated);\n        window.clearTimeout(cacheTimeout as number);\n        cacheTimeout = window.setTimeout(() => {\n            cache.current = {};\n            logDebugger(`Cache cleared`, options.isDebuggerActivated);\n        }, options.cacheTimeout);\n    }\n}\n\n/**\n * Creates a store with the provided initial state.\n * @param {object} initialState - The initial state object for the store.\n * @returns {CreateStoreReturn} An object representing the created store.\n */\nexport const createQueryStore = (initialState: object): CreateStoreReturn => {\n    Object.entries(initialState).forEach(([key, value]) => {\n        cache.current[key] = value;\n    });\n\n    return { __value: initialState };\n}\n\nconst QueryContext = createContext(null);\n\nexport const QueryProvider = ({ children, store, dispatchers: _dispatchers }) => {\n    if (store && !store.__value) throw new Error(\"`store` must be a valid QueryStore data, use `createQueryStore` function to create it\");\n\n    if (_dispatchers && !Array.isArray(_dispatchers)) {\n        throw new Error(\"`dispatchers` must be a valid array of dispatchers, use `createDispatcher` function to generate them\");\n    } else {\n        _dispatchers.forEach(({ name, actions }) => {\n            dispatchers.actions = {\n                ...dispatchers.actions,\n                [name]: {\n                    ...dispatchers.actions[name],\n                    ...actions,\n                },\n            }\n        });\n    }\n    \n    const [state, setState] = useState(store ? store.__value : null);\n\n    return (\n        // @ts-ignore\n        <QueryContext.Provider value={[state, setState]}>\n            {children}\n        </QueryContext.Provider>\n    )\n}\n\n/**\n * Creates a dispatcher object with specified actions for managing state updates.\n * @param {DispatcherOptions} dispatcherOptions - Options for configuring the dispatcher.\n * @returns {DispatcherObject} An object representing the created dispatcher.\n */\nexport const createQueryDispatcher = (dispatcherOptions: DispatcherOptions) => {\n    const actions = {};\n\n    Object.entries(dispatcherOptions.actions).forEach(([actionName, actionFn]) => {\n        actions[actionName] = (data: any, setData: Function) => (payload: any) => {\n            const _data = { ...data }[dispatcherOptions.name];\n            \n            actionFn(_data, payload);\n\n            setData({ ...data, ..._data });\n        };\n    });\n\n    return {\n        name: dispatcherOptions.name,\n        actions\n    }\n}\n\n/**\n * Custom hook for accessing dispatcher actions associated with a specific name.\n * @param {string} name - The name of the dispatcher to retrieve actions for.\n * @returns {Object} An object containing the actions associated with the specified dispatcher name.\n */\nexport const useQueryDispatcher = (name: string) => {\n    // @ts-ignore\n    const [data, setData] = useContext(QueryContext);\n\n    const actions = {};\n    \n    Object.entries(dispatchers.actions[name]).forEach(([actionName, actionFn]) => {\n        // @ts-ignore\n        actions[actionName] = (payload: any) => actionFn(data, setData)(payload);\n    });\n\n    return actions;\n}\n\n/**\n * Custom hook for accessing and updating query state from the QueryContext.\n * @param {string} [name=undefined] - The name of the specific state to access within the query data.\n * @returns {[S, Dispatch<SetStateAction<S>>]} An array containing the queried state and a function to update the state.\n *                 If `name` is provided, it returns the specified state and a function to update that state.\n *                 If `name` is not provided, it returns the entire query data and a function to update it.\n */\nexport const useQueryState = (name: string | undefined = undefined): [any, Dispatch<SetStateAction<any>>] => {\n    // @ts-ignore\n    const [data, setData] = useContext(QueryContext);\n    \n    if (name) { \n        return [\n            data ? data[name] : data, \n            (value) => {\n                setData((prev: any) => ({ ...prev, [name]: value }));\n                cache.current[name] = value;\n            }\n        ];\n    } else {\n        return [data, setData];\n    }\n};\n\n/**\n * Custom hook for querying data from the QueryContext and applying a callback selector.\n * @param {function} [callbackSelector] - The callback function to apply as a selector on the data.\n * @returns {*} The result of applying the callback selector on the data from the QueryContext.\n */\nexport const useQuerySelector = (callbackSelector: Function = (state: any) => {}): any => {\n    // @ts-ignore\n    const [data] = useContext(QueryContext);\n    \n    return callbackSelector(data);\n};\n\n/**\n * Use query hook that manage requests, cache and other features.\n * @param {string} url \n * @param {object} options\n * @param {string} [options.name] Name must be a string. It should contains data state name.\n * @param {string} [options.selector] Selector must be a string. It should contains key value to select from result object.\n * @param {string} [options.pick] Pick must be a function or an array of string. It rappresent the function or the array to pick just a portion of data.\n * @param {function} [options.transform] Transform must be a function. It rappresent the funcion to transform data before saving on state. If you need to mutate data, use `mutate` function instead\n * @param {string} [options.method] Method must be a string. It should be one of \"GET\", \"POST\", \"PUT\", \"PATCH\", \"DELETE\".\n * @param {object} [options.headers] Headers must be an object. It should contains request headers key value.\n * @param {*} [options.body]\n * @param {boolean} [options.isDebuggerActivated] isDebuggerActivated must be a boolean. It should be activated if you need to debug all process.\n * @param {number} [options.cacheTimeout] cacheTimeout must be a number. It rappresent the timeout to remove cached data from memory in milliseconds.\n * @returns {QueryResult}\n */\nexport const useQuery = (url: string, options: DefaultUseQueryOptions = { ...DEFAULT_OPTIONS }): QueryResult => {\n    const { name, selector, pick, transform, method, headers, body, isDebuggerActivated } = { ...DEFAULT_OPTIONS, ...options };\n\n    validateOptions({ ...DEFAULT_OPTIONS, ...options });\n    \n    // const cache = useRef({});\n\n    const [data, setData] = useQueryState(name);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n    const fetchData = async () => {\n        logDebugger(\"Fetching data...\", isDebuggerActivated);\n\n        if (error) setError(null);\n        if (!loading) setLoading(true);\n\n        if (cache.current[url]) {\n            logDebugger(\"Get data from cache, no need a new request\", isDebuggerActivated);\n            if (typeof transform === \"function\") logDebugger(\"transform data before saving\", isDebuggerActivated);\n            if (typeof pick === \"function\" || Array.isArray(pick)) logDebugger(\"pick data before saving\", isDebuggerActivated);\n\n            setData(cache.current[url]);\n            timeoutCacheClear(options, cache);\n            setLoading(false);\n            return;\n        }\n\n        try {\n            logDebugger(\"No data found in cache, proceed to do a new request...\", isDebuggerActivated);\n\n            // @ts-ignore\n            const response = await fetch(url, { method, headers, body });\n            const result = await response.json();\n\n            if (response.ok) {\n                const _result = selector ? result[selector] : result;\n                if (typeof transform === \"function\") logDebugger(\"transform data before saving\", isDebuggerActivated);\n                let _transformedData = typeof transform === \"function\" ? transform(_result) : _result;\n                if (typeof pick === \"function\" || Array.isArray(pick)) {\n                    logDebugger(\"pick data before saving\", isDebuggerActivated);\n                    // @ts-ignore\n                    _transformedData = JSON.parse(JSON.stringify(_transformedData, pick));\n                }\n                setData(_transformedData);\n                logDebugger(\"Request done\", isDebuggerActivated);\n                cache.current[url] = _transformedData;\n                timeoutCacheClear(options, cache);\n                logDebugger(`New data saved on cache for: \"${url}\"`, isDebuggerActivated);\n            } else {\n                setError(result);\n                logDebugger(\"An error occurred\", isDebuggerActivated, true, result);\n            }\n        } catch (err) {\n            setError(err);\n            logDebugger(\"An error occurred\", isDebuggerActivated, true, err);\n        } finally {\n            setLoading(false);\n            logDebugger(\"Data seatled, process done\", isDebuggerActivated);\n        }\n    };\n\n    useEffect (() => {\n        fetchData();\n    }, [url]);\n\n    return {\n        data,\n        error,\n        loading,\n        mutate: setData,\n        refresh: fetchData,\n        cache: {\n            get: (url) => {\n                return url ? cache.current[url] : cache.current;\n            },\n            has: (url) => {\n                return cache.current[url];\n            },\n            clear: () => {\n                cache.current = {};\n                logDebugger(`Cache cleared`, isDebuggerActivated);\n            }\n        }\n    };\n};\n\n/**\n * Use query hook that manage requests, cache and other features with an event like \"click\"\n * @param {string} url \n * @param {object} options\n * @param {string} [options.name] Name must be a string. It should contains data state name.\n * @param {string} [options.selector] Selector must be a string. It should contains key value to select from result object.\n * @param {string} [options.pick] Pick must be a function or an array of string. It rappresent the function or the array to pick just a portion of data.\n * @param {function} [options.transform] Transform must be a function. It rappresent the funcion to transform data before saving on state. If you need to mutate data, use `mutate` function instead\n * @param {string} [options.method] Method must be a string. It should be one of \"GET\", \"POST\", \"PUT\", \"PATCH\", \"DELETE\".\n * @param {object} [options.headers] Headers must be an object. It should contains request headers key value.\n * @param {*} [options.body]\n * @param {boolean} [options.isDebuggerActivated] isDebuggerActivated must be a boolean. It should be activated if you need to debug all process.\n * @param {number} [options.cacheTimeout] cacheTimeout must be a number. It rappresent the timeout to remove cached data from memory in milliseconds.\n * @returns {QueryEventResult}\n */\nexport const useQueryEvent = (url: string, options: DefaultUseQueryOptions = { ...DEFAULT_OPTIONS }): QueryEventResult => {\n    const [isSending, setIsSending] = useState(false);\n\n    const { name, selector, pick, transform, method, headers, body, isDebuggerActivated } = { ...DEFAULT_OPTIONS, ...options };\n\n    validateOptions({ ...DEFAULT_OPTIONS, ...options });\n    \n    // const cache = useRef({});\n\n    const [data, setData] = useQueryState(name);\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n    const fetchData = async () => {\n        logDebugger(\"Fetching data...\", isDebuggerActivated);\n\n        if (error) setError(null);\n        if (!loading) setLoading(true);\n\n        if (cache.current[url]) {\n            logDebugger(\"Get data from cache, no need a new request\", isDebuggerActivated);\n            if (typeof transform === \"function\") logDebugger(\"transform data before saving\", isDebuggerActivated);\n            if (typeof pick === \"function\" || Array.isArray(pick)) logDebugger(\"pick data before saving\", isDebuggerActivated);\n\n            setData(cache.current[url]);\n            timeoutCacheClear(options, cache);\n            setLoading(false);\n            return;\n        }\n\n        try {\n            logDebugger(\"No data found in cache, proceed to do a new request...\", isDebuggerActivated);\n\n            // @ts-ignore\n            const response = await fetch(url, { method, headers, data: body });\n            const result = await response.json();\n\n            if (response.ok) {\n                const _result = selector ? result[selector] : result;\n                if (typeof transform === \"function\") logDebugger(\"transform data before saving\", isDebuggerActivated);\n                let _transformedData = typeof transform === \"function\" ? transform(_result) : _result;\n                if (typeof pick === \"function\" || Array.isArray(pick)) {\n                    logDebugger(\"pick data before saving\", isDebuggerActivated);\n                    // @ts-ignore\n                    _transformedData = JSON.parse(JSON.stringify(_transformedData, pick));\n                }\n                setData(_transformedData);\n                logDebugger(\"Request done\", isDebuggerActivated);\n                cache.current[url] = _transformedData;\n                timeoutCacheClear(options, cache);\n                logDebugger(`New data saved on cache for: \"${url}\"`, isDebuggerActivated);\n            } else {\n                setError(result);\n                logDebugger(\"An error occurred\", isDebuggerActivated, true, result);\n            }\n        } catch (err) {\n            setError(err);\n            logDebugger(\"An error occurred\", isDebuggerActivated, true, err);\n        } finally {\n            setLoading(false);\n            logDebugger(\"Data seatled, process done\", isDebuggerActivated);\n        }\n    };\n  \n    const sendRequest = useCallback(async () => {\n      // don't send again while we are sending\n      if (isSending) return\n      // update state\n      setIsSending(true);\n      // send the actual request\n      await fetchData();\n      // once the request is sent, update state again\n      setIsSending(false);\n    }, [isSending, url]) // update the callback if the state changes\n  \n    return {\n        sendRequest,\n        isSending,\n        data,\n        error,\n        loading,\n        mutate: setData,\n        refresh: fetchData,\n        cache: {\n            get: (url: string) => {\n                return url ? cache.current[url] : cache.current;\n            },\n            has: (url: string) => {\n                return cache.current[url];\n            },\n            clear: () => {\n                cache.current = {};\n                logDebugger(`Cache cleared`, isDebuggerActivated);\n            }\n        }\n    }\n}"],"names":["DEFAULT_OPTIONS","name","undefined","selector","transform","pick","method","headers","body","isDebuggerActivated","cacheTimeout","dispatchers","actions","cache","current","logDebugger","message","isError","error","console","Date","toLocaleTimeString","log","validateOptions","options","keys","Object","_keys","symDifference","filter","item","includes","Error","indexOf","toUpperCase","Array","isArray","length","join","timeoutCacheClear","window","clearTimeout","setTimeout","createQueryStore","initialState","entries","forEach","key","value","__value","QueryContext","createContext","QueryProvider","children","store","_dispatchers","_extends","state","setState","useState","_jsx","Provider","createQueryDispatcher","dispatcherOptions","actionName","actionFn","data","setData","payload","_data","useQueryDispatcher","useContext","useQueryState","prev","useQuerySelector","callbackSelector","useQuery","url","setError","loading","setLoading","fetchData","response","fetch","result","json","ok","_result","_transformedData","JSON","parse","stringify","err","useEffect","mutate","refresh","get","has","clear","useQueryEvent","isSending","setIsSending","sendRequest","useCallback"],"mappings":"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"}